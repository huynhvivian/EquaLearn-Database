# Generated by Django 3.2 on 2021-04-17 19:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('library_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('school', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=20)),
                ('grade_level', models.CharField(max_length=5)),
            ],
            options={
                'unique_together': {('course_name', 'grade_level')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('User_ID', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('usertype', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=12)),
                ('email', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equalearn.user')),
                ('referred_organization', models.CharField(max_length=60)),
                ('proof_of_low_income', models.BooleanField()),
                ('accepted', models.BooleanField(default=False)),
            ],
            bases=('equalearn.user',),
        ),
        migrations.CreateModel(
            name='Executive',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equalearn.user')),
                ('position', models.CharField(max_length=50)),
            ],
            bases=('equalearn.user',),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='equalearn.user')),
                ('preference_online', models.CharField(max_length=50)),
                ('date_started', models.DateField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
            ],
            bases=('equalearn.user',),
        ),
        migrations.CreateModel(
            name='Takes',
            fields=[
                ('takes_id', models.AutoField(primary_key=True, serialize=False)),
                ('end_date', models.DateField(default=datetime.date(2021, 12, 31))),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='takes', to='equalearn.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='takes', to='equalearn.subject')),
                ('current_tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_subject', to='equalearn.tutor')),
            ],
            options={
                'unique_together': {('student_name', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='schedule_student',
            fields=[
                ('student_schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('weekday', models.CharField(choices=[('Monday', 0), ('Tuesday', 1), ('Wednesday', 2), ('Thursday', 3), ('Friday', 4), ('Saturday', 5), ('Sunday', 6)], max_length=15)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='equalearn.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='user_id_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='equalearn.client'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='equalearn.student')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='equalearn.subject')),
                ('user_id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='equalearn.client')),
                ('user_id_tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='equalearn.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='preferred_student',
            fields=[
                ('student_loc_id', models.AutoField(primary_key=True, serialize=False)),
                ('loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferred_student', to='equalearn.location')),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferred_location', to='equalearn.student')),
            ],
            options={
                'unique_together': {('student_name', 'loc')},
            },
        ),
        migrations.CreateModel(
            name='PendingSession',
            fields=[
                ('sessions_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=50)),
                ('weekday', models.CharField(max_length=15)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('takes_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pendingsessions', to='equalearn.takes')),
                ('user_id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pendingsessions', to='equalearn.client')),
                ('user_id_tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pendingsessions', to='equalearn.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Teaches',
            fields=[
                ('teach_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaches', to='equalearn.subject')),
                ('tutor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaches', to='equalearn.tutor')),
            ],
            options={
                'unique_together': {('tutor_name', 'subject')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together={('name', 'user_id_client')},
        ),
    ]
